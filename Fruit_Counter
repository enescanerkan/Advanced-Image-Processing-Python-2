import cv2
import matplotlib.pyplot as plt

class FruitCounter:
    def __init__(self, image_path):
        # Görüntüyü oku
        self.image = cv2.imread(image_path)
        # Gaussian bulanıklık uygula
        self.blurred = cv2.GaussianBlur(self.image, (3, 3), 0)
        # Gri tonlamalı görüntüye dönüştür
        self.gray = cv2.cvtColor(self.blurred, cv2.COLOR_BGR2GRAY)
        # Kenar tespiti uygula
        self.edges = cv2.Canny(self.gray, 75, 330)
        # Meyve sayısını tutmak için değişken tanımla
        self.fruit_count = 0

    def find_fruits(self):
        # Kenarları bulanıklaştırılmış görüntüdeki konturları bul
        contours, _ = cv2.findContours(self.edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        # Konturları alanlarına göre sırala
        contours = sorted(contours, key=cv2.contourArea, reverse=True)
        
        # Her bir konturu işle
        for i, contour in enumerate(contours, start=1):
            area = cv2.contourArea(contour)
            if area > 100:  # Eşik değerden büyük konturları işle
                self.fruit_count += 1
                (x, y), radius = cv2.minEnclosingCircle(contour)
                center = (int(x), int(y))
                radius = int(radius)
                # Konturun etrafına daire çiz
                cv2.circle(self.image, center, radius, (0, 0, 0), 3)
                # Dairenin merkezine sayı ekle
                cv2.putText(self.image, str(i), center, cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 0), 2, cv2.LINE_AA)

    def show_results(self):
        # Meyve sayısını görsel olarak göster
        font = cv2.FONT_HERSHEY_SIMPLEX
        cv2.putText(self.image, 'Meyve Sayisi: ' + str(self.fruit_count), (10, 520), font, 1, (0, 0, 255), 2, cv2.LINE_AA)

        # Sonuçları görselleştir
        fig, axes = plt.subplots(1, 3, figsize=(18, 6))
        axes[1].imshow(cv2.cvtColor(self.image, cv2.COLOR_BGR2RGB))
        axes[1].set_title('Meyve Sayma')

        axes[0].imshow(cv2.cvtColor(self.blurred, cv2.COLOR_BGR2RGB))
        axes[0].set_title('Gaussian Blur')

        axes[2].imshow(self.edges, cmap='gray')
        axes[2].set_title('Kenarlar')

        plt.show()

if __name__ == "__main__":
    fruit_counter = FruitCounter('images/meyve.jpg')
    fruit_counter.find_fruits()
    fruit_counter.show_results()
